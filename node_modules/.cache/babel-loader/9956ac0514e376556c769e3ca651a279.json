{"ast":null,"code":"var _jsxFileName = \"/Users/remyboire/Documents/github/scrimba/quizzical/src/components/Question.js\";\nimport React from 'react';\nimport './question.css';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  const shuffledAnswers = [...props.incorrect_answers, props.correct_answer];\n  const sortedAnswers = shuffledAnswers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `answer-button ${props.selectedAnswer === answer ? 'selected' : ''}`,\n    onClick: () => props.handleQuestionClick(props.id, props.question, answer),\n    children: [\"// if props.selectedAnswer is equal to answer, add class 'selected' key=\", nanoid(), \" onClick=\", () => props.handleQuestionClick(props.id, props.question, answer), \">\", answer]\n  }, nanoid(), true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question--wrapper7\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"question\",\n      children: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"category\",\n      children: props.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: sortedAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/remyboire/Documents/github/scrimba/quizzical/src/components/Question.js"],"names":["React","nanoid","Question","props","shuffledAnswers","incorrect_answers","correct_answer","sortedAnswers","map","answer","selectedAnswer","handleQuestionClick","id","question","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvC,QAAMC,eAAe,GAAG,CAAC,GAAGD,KAAK,CAACE,iBAAV,EAA6BF,KAAK,CAACG,cAAnC,CAAxB;AAEA,QAAMC,aAAa,GAAGH,eAAe,CAACI,GAAhB,CAAqBC,MAAD,iBACzC;AAAQ,IAAA,SAAS,EAAG,iBAAgBN,KAAK,CAACO,cAAN,KAAyBD,MAAzB,GAAkC,UAAlC,GAA+C,EAAG,EAAtF;AAAwG,IAAA,OAAO,EAAE,MAAMN,KAAK,CAACQ,mBAAN,CAA0BR,KAAK,CAACS,EAAhC,EAAoCT,KAAK,CAACU,QAA1C,EAAoDJ,MAApD,CAAvH;AAAA,2FAGKR,MAAM,EAHX,eAGwB,MAAME,KAAK,CAACQ,mBAAN,CAA0BR,KAAK,CAACS,EAAhC,EAAoCT,KAAK,CAACU,QAA1C,EAAoDJ,MAApD,CAH9B,OAIEA,MAJF;AAAA,KAA8FR,MAAM,EAApG;AAAA;AAAA;AAAA;AAAA,UADqB,CAAtB;AAQA,sBACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BE,KAAK,CAACU;AAAhC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BV,KAAK,CAACW;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAA0BP;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;KAlBuBL,Q","sourcesContent":["import React from 'react'\nimport './question.css'\nimport { nanoid } from 'nanoid'\n\nexport default function Question(props) {\n\tconst shuffledAnswers = [...props.incorrect_answers, props.correct_answer]\n\n\tconst sortedAnswers = shuffledAnswers.map((answer) => (\n\t\t<button className={`answer-button ${props.selectedAnswer === answer ? 'selected' : ''}`} key={nanoid()} onClick={() => props.handleQuestionClick(props.id, props.question, answer)}>\n\t\t// if props.selectedAnswer is equal to answer, add class 'selected'\n\n\t\tkey={nanoid()} onClick={() => props.handleQuestionClick(props.id, props.question, answer)}>\n\t\t\t{answer}\n\t\t</button>\n\t))\n\treturn (\n\t\t<div className='question--wrapper7'>\n\t\t\t<h1 className='question'>{props.question}</h1>\n\t\t\t<h2 className='category'>{props.category}</h2>\n\t\t\t<div className='answers'>{sortedAnswers}</div>\n\t\t</div>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}