{"ast":null,"code":"var _jsxFileName = \"/Users/remyboire/Documents/github/scrimba/quizzical/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport Question from './components/Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  const [selectedQuestion, setSelectedQuestion] = React.useState(null); // get data from api and return it\n\n  function getQuestions() {\n    fetch('https://opentdb.com/api.php?amount=5').then(res => res.json()).then(data => setQuestions(data.results));\n    setQuestions(questions.map(question => ({ ...question,\n      isSelected: false\n    })));\n  }\n\n  React.useEffect(() => {\n    getQuestions();\n  }, []);\n\n  function handleQuestionClick(question, answer) {\n    console.log(question);\n    console.log(answer);\n    setSelectedQuestion(question);\n  } // map questions to question components\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n      question: question.question,\n      category: question.category,\n      correct_answer: question.correct_answer,\n      incorrect_answers: question.incorrect_answers,\n      handleQuestionClick: handleQuestionClick\n    }, question.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"rODeWFyLwjTwXHfhJH9YveWINXA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/remyboire/Documents/github/scrimba/quizzical/src/App.js"],"names":["React","Question","App","questions","setQuestions","useState","selectedQuestion","setSelectedQuestion","getQuestions","fetch","then","res","json","data","results","map","question","isSelected","useEffect","handleQuestionClick","answer","console","log","category","correct_answer","incorrect_answers","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;AAEA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,KAAK,CAACK,QAAN,CAAe,IAAf,CAAhD,CAH6B,CAK7B;;AACA,WAASG,YAAT,GAAwB;AACvBC,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACEC,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAEEF,IAFF,CAEQG,IAAD,IAAUT,YAAY,CAACS,IAAI,CAACC,OAAN,CAF7B;AAIAV,IAAAA,YAAY,CACXD,SAAS,CAACY,GAAV,CAAeC,QAAD,KAAe,EAC5B,GAAGA,QADyB;AAE5BC,MAAAA,UAAU,EAAE;AAFgB,KAAf,CAAd,CADW,CAAZ;AAMA;;AAEDjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACrBV,IAAAA,YAAY;AACZ,GAFD,EAEG,EAFH;;AAIA,WAASW,mBAAT,CAA6BH,QAA7B,EAAuCI,MAAvC,EAA+C;AAC9CC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAb,IAAAA,mBAAmB,CAACS,QAAD,CAAnB;AACA,GA3B4B,CA6B7B;;;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACEb,SAAS,CAACY,GAAV,CAAeC,QAAD,iBACd,QAAC,QAAD;AACC,MAAA,QAAQ,EAAEA,QAAQ,CAACA,QADpB;AAEC,MAAA,QAAQ,EAAEA,QAAQ,CAACO,QAFpB;AAGC,MAAA,cAAc,EAAEP,QAAQ,CAACQ,cAH1B;AAIC,MAAA,iBAAiB,EAAER,QAAQ,CAACS,iBAJ7B;AAMC,MAAA,mBAAmB,EAAEN;AANtB,OAKMH,QAAQ,CAACU,EALf;AAAA;AAAA;AAAA;AAAA,YADA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;GA7CuBxB,G;;KAAAA,G","sourcesContent":["import React from 'react'\nimport './App.css'\nimport Question from './components/Question'\n\nexport default function App() {\n\tconst [questions, setQuestions] = React.useState([])\n\n\tconst [selectedQuestion, setSelectedQuestion] = React.useState(null)\n\n\t// get data from api and return it\n\tfunction getQuestions() {\n\t\tfetch('https://opentdb.com/api.php?amount=5')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => setQuestions(data.results))\n\n\t\tsetQuestions(\n\t\t\tquestions.map((question) => ({\n\t\t\t\t...question,\n\t\t\t\tisSelected: false,\n\t\t\t}))\n\t\t)\n\t}\n\n\tReact.useEffect(() => {\n\t\tgetQuestions()\n\t}, [])\n\n\tfunction handleQuestionClick(question, answer) {\n\t\tconsole.log(question)\n\t\tconsole.log(answer)\n\t\tsetSelectedQuestion(question)\n\t}\n\n\t// map questions to question components\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t{questions.map((question) => (\n\t\t\t\t<Question\n\t\t\t\t\tquestion={question.question}\n\t\t\t\t\tcategory={question.category}\n\t\t\t\t\tcorrect_answer={question.correct_answer}\n\t\t\t\t\tincorrect_answers={question.incorrect_answers}\n\t\t\t\t\tkey={question.id}\n\t\t\t\t\thandleQuestionClick={handleQuestionClick}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}