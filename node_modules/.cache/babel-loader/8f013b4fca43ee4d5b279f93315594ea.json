{"ast":null,"code":"var _jsxFileName = \"/Users/remyboire/Documents/github/scrimba/quizzical/src/components/Question.js\";\nimport React from 'react';\nimport './question.css';\nimport { nanoid } from 'nanoid';\nimport he from 'he';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  const sortedAnswers = props.incorrect_answers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `answer ${props.selectedAnswer === answer ? 'selected' : ''} ${answer === props.correct_answer && props.isChecked ? 'correct' : ''} ${answer !== props.correct_answer && props.isChecked ? 'incorrect' : ''}`,\n    onClick: () => props.handleQuestionClick(props.id, props.question, answer),\n    children: he.decode(answer)\n  }, nanoid(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question--wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"question\",\n      children: he.decode(props.question)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"category\",\n      children: props.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers\",\n        children: sortedAnswers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/remyboire/Documents/github/scrimba/quizzical/src/components/Question.js"],"names":["React","nanoid","he","Question","props","sortedAnswers","incorrect_answers","map","answer","selectedAnswer","correct_answer","isChecked","handleQuestionClick","id","question","decode","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvC,QAAMC,aAAa,GAAGD,KAAK,CAACE,iBAAN,CAAwBC,GAAxB,CAA6BC,MAAD,iBACjD;AACC,IAAA,SAAS,EAAG,UAASJ,KAAK,CAACK,cAAN,KAAyBD,MAAzB,GAAkC,UAAlC,GAA+C,EAAG,IAAGA,MAAM,KAAKJ,KAAK,CAACM,cAAjB,IAAmCN,KAAK,CAACO,SAAzC,GAAqD,SAArD,GAAiE,EAAG,IAC7IH,MAAM,KAAKJ,KAAK,CAACM,cAAjB,IAAmCN,KAAK,CAACO,SAAzC,GAAqD,WAArD,GAAmE,EACnE,EAHF;AAKC,IAAA,OAAO,EAAE,MAAMP,KAAK,CAACQ,mBAAN,CAA0BR,KAAK,CAACS,EAAhC,EAAoCT,KAAK,CAACU,QAA1C,EAAoDN,MAApD,CALhB;AAAA,cAOEN,EAAE,CAACa,MAAH,CAAUP,MAAV;AAPF,KAIMP,MAAM,EAJZ;AAAA;AAAA;AAAA;AAAA,UADqB,CAAtB;AAYA,sBACC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BC,EAAE,CAACa,MAAH,CAAUX,KAAK,CAACU,QAAhB;AAA1B;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BV,KAAK,CAACY;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBAA0BX;AAA1B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA;KAtBuBF,Q","sourcesContent":["import React from 'react'\nimport './question.css'\nimport { nanoid } from 'nanoid'\nimport he from 'he'\n\nexport default function Question(props) {\n\tconst sortedAnswers = props.incorrect_answers.map((answer) => (\n\t\t<button\n\t\t\tclassName={`answer ${props.selectedAnswer === answer ? 'selected' : ''} ${answer === props.correct_answer && props.isChecked ? 'correct' : ''} ${\n\t\t\t\tanswer !== props.correct_answer && props.isChecked ? 'incorrect' : ''\n\t\t\t}`}\n\t\t\tkey={nanoid()}\n\t\t\tonClick={() => props.handleQuestionClick(props.id, props.question, answer)}\n\t\t>\n\t\t\t{he.decode(answer)}\n\t\t</button>\n\t))\n\n\treturn (\n\t\t<div className='question--wrapper'>\n\t\t\t<h1 className='question'>{he.decode(props.question)}</h1>\n\t\t\t<h2 className='category'>{props.category}</h2>\n\t\t\t<div className='answers'>\n\t\t\t\t<div className='answers'>{sortedAnswers}</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}