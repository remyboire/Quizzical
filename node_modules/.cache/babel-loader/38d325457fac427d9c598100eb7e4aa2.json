{"ast":null,"code":"var _jsxFileName = \"/Users/remyboire/Documents/github/scrimba/quizzical/src/components/Question.js\";\nimport React from 'react';\nimport './question.css';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  React.use;\n  const shuffledAnswers = [...props.incorrect_answers, props.correct_answer].sort(() => Math.random() - 0.5);\n  let sortedAnswers = shuffledAnswers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `answer ${props.selectedAnswer === answer ? 'selected' : ''} ${answer === props.correct_answer && props.isChecked ? 'correct' : ''} ${answer !== props.correct_answer && props.isChecked ? 'incorrect' : ''}`,\n    onClick: () => props.handleQuestionClick(props.id, props.question, answer),\n    children: answer\n  }, nanoid(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question--wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"question\",\n      children: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"category\",\n      children: props.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: sortedAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/remyboire/Documents/github/scrimba/quizzical/src/components/Question.js"],"names":["React","nanoid","Question","props","use","shuffledAnswers","incorrect_answers","correct_answer","sort","Math","random","sortedAnswers","map","answer","selectedAnswer","isChecked","handleQuestionClick","id","question","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEvCH,EAAAA,KAAK,CAACI,GAAN;AACA,QAAMC,eAAe,GAAG,CAAC,GAAGF,KAAK,CAACG,iBAAV,EAA6BH,KAAK,CAACI,cAAnC,EAAmDC,IAAnD,CAAwD,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA9E,CAAxB;AAEA,MAAIC,aAAa,GAAGN,eAAe,CAACO,GAAhB,CAAqBC,MAAD,iBACvC;AACC,IAAA,SAAS,EAAG,UAASV,KAAK,CAACW,cAAN,KAAyBD,MAAzB,GAAkC,UAAlC,GAA+C,EAAG,IAAGA,MAAM,KAAKV,KAAK,CAACI,cAAjB,IAAmCJ,KAAK,CAACY,SAAzC,GAAqD,SAArD,GAAiE,EAAG,IAC7IF,MAAM,KAAKV,KAAK,CAACI,cAAjB,IAAmCJ,KAAK,CAACY,SAAzC,GAAqD,WAArD,GAAmE,EACnE,EAHF;AAKC,IAAA,OAAO,EAAE,MAAMZ,KAAK,CAACa,mBAAN,CAA0Bb,KAAK,CAACc,EAAhC,EAAoCd,KAAK,CAACe,QAA1C,EAAoDL,MAApD,CALhB;AAAA,cAOEA;AAPF,KAIMZ,MAAM,EAJZ;AAAA;AAAA;AAAA;AAAA,UADmB,CAApB;AAWA,sBACC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BE,KAAK,CAACe;AAAhC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0Bf,KAAK,CAACgB;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAA0BR;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;KAvBuBT,Q","sourcesContent":["import React from 'react'\nimport './question.css'\nimport { nanoid } from 'nanoid'\n\nexport default function Question(props) {\n\n\tReact.use\n\tconst shuffledAnswers = [...props.incorrect_answers, props.correct_answer].sort(() => Math.random() - 0.5)\n\n\tlet sortedAnswers = shuffledAnswers.map((answer) => (\n\t\t<button\n\t\t\tclassName={`answer ${props.selectedAnswer === answer ? 'selected' : ''} ${answer === props.correct_answer && props.isChecked ? 'correct' : ''} ${\n\t\t\t\tanswer !== props.correct_answer && props.isChecked ? 'incorrect' : ''\n\t\t\t}`}\n\t\t\tkey={nanoid()}\n\t\t\tonClick={() => props.handleQuestionClick(props.id, props.question, answer)}\n\t\t>\n\t\t\t{answer}\n\t\t</button>\n\t))\n\treturn (\n\t\t<div className='question--wrapper'>\n\t\t\t<h1 className='question'>{props.question}</h1>\n\t\t\t<h2 className='category'>{props.category}</h2>\n\t\t\t<div className='answers'>{sortedAnswers}</div>\n\t\t</div>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}